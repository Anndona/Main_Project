@model WebApplication2.Models.Student

@{
    ViewBag.Title = "getStudent";
}
<style>

    body {
        background-image: url("/fonts/a.jpg");
    }

</style>
    <center><h2>REGISTRATION</h2></center>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4></h4>
            <hr />
            @Html.ValidationSummary(true)

            <div class="form-group">
                @Html.LabelFor(model => model.Sname, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Sname)
                    @Html.ValidationMessageFor(model => model.Sname)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Saddress, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Saddress)
                    @Html.ValidationMessageFor(model => model.Saddress)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Semail, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Semail)
                    @Html.ValidationMessageFor(model => model.Semail)
                </div>
            </div>
            <!--- <div class="form-group">
                 @Html.LabelFor(model => model.Gender, new { @class = "control-label col-md-2" })
                 <div class="col-md-10">
                     @Html.DropDownList("Gender",new SelectList(Enum.GetNames(typeof(WebApplication2.Models.Gender))),"--Select--")
                     @Html.ValidationMessageFor(model => model.Gender)
                 </div>
             </div>-->
            <div class="form-group">
                @Html.LabelFor(model => model.Gender, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    Male:   @Html.RadioButton("Gender", "Male")
                    Female: @Html.RadioButton("Gender", "Female")

                </div>
            </div>



            <div class="form-group">
                @Html.LabelFor(model => model.Username, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Username)
                    @Html.ValidationMessageFor(model => model.Username)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Password, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Password)
                    @Html.ValidationMessageFor(model => model.Password)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmPassword, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ConfirmPassword)
                    @Html.ValidationMessageFor(model => model.ConfirmPassword)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Checkbox, new { @class = "control-label col-md-2" })
                <div class="col-md-10">


                    @Html.CheckBox("Condition",false,new{@id="chkcondition"})           I accept all the terms and conditions
                    
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
